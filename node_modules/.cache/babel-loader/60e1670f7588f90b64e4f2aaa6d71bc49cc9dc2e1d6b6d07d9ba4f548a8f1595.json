{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Engin\\\\Desktop\\\\telemetri\\\\adini-arayuz-godum\\\\src\\\\pages\\\\Iletisim.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../styles/global.css\";\nimport \"../styles/components/iletisim.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Iletisim() {\n  _s();\n  const canvasRef = useRef(null);\n  const socketRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const connectWebSocket = () => {\n      console.log(\"WebSocket bağlantısı başlatılıyor...\");\n      socketRef.current = new WebSocket(\"ws://localhost:5004\");\n      socketRef.current.onopen = () => {\n        console.log(\"WebSocket bağlantısı başarılı!\");\n        setIsConnected(true);\n      };\n      socketRef.current.onerror = error => {\n        console.error(\"WebSocket bağlantı hatası:\", error);\n        setTimeout(connectWebSocket, 5000); // 5 saniye sonra yeniden dene\n      };\n      socketRef.current.onclose = () => {\n        console.log(\"WebSocket bağlantısı kapandı.\");\n        setIsConnected(false);\n        setTimeout(connectWebSocket, 5000); // Bağlantı kesildiğinde yeniden dene\n      };\n      socketRef.current.onmessage = event => {\n        if (!canvasRef.current) return;\n        const arrayBuffer = event.data;\n        const blob = new Blob([arrayBuffer], {\n          type: \"image/jpeg\"\n        });\n        const imageUrl = URL.createObjectURL(blob);\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.onload = () => {\n          if (!canvasRef.current) return;\n          console.log(\"Yeni bir frame yüklendi.\");\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          URL.revokeObjectURL(imageUrl); // Bellek temizleme\n        };\n        img.src = imageUrl;\n      };\n    };\n    setTimeout(connectWebSocket, 1000); // WebSocket bağlantısını 1 saniye sonra başlat\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n        console.log(\"WebSocket bağlantısı kapatıldı.\");\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Ak\\u0131\\u015F\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isConnected ? \"Bağlantı başarılı!\" : \"Bağlantı kuruluyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"640\",\n      height: \"480\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Iletisim, \"bSwIhUWAzmOAPS4znF0qGT/5Sao=\");\n_c = Iletisim;\nexport default Iletisim;\nvar _c;\n$RefreshReg$(_c, \"Iletisim\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Iletisim","_s","canvasRef","socketRef","isConnected","setIsConnected","connectWebSocket","console","log","current","WebSocket","onopen","onerror","error","setTimeout","onclose","onmessage","event","arrayBuffer","data","blob","Blob","type","imageUrl","URL","createObjectURL","canvas","ctx","getContext","img","Image","onload","clearRect","width","height","drawImage","revokeObjectURL","src","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/Engin/Desktop/telemetri/adini-arayuz-godum/src/pages/Iletisim.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../styles/global.css\";\r\nimport \"../styles/components/iletisim.css\";\r\n\r\nfunction Iletisim() {\r\n  const canvasRef = useRef(null);\r\n  const socketRef = useRef(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const connectWebSocket = () => {\r\n      console.log(\"WebSocket bağlantısı başlatılıyor...\");\r\n      socketRef.current = new WebSocket(\"ws://localhost:5004\");\r\n\r\n      socketRef.current.onopen = () => {\r\n        console.log(\"WebSocket bağlantısı başarılı!\");\r\n        setIsConnected(true);\r\n      };\r\n\r\n      socketRef.current.onerror = (error) => {\r\n        console.error(\"WebSocket bağlantı hatası:\", error);\r\n        setTimeout(connectWebSocket, 5000); // 5 saniye sonra yeniden dene\r\n      };\r\n\r\n      socketRef.current.onclose = () => {\r\n        console.log(\"WebSocket bağlantısı kapandı.\");\r\n        setIsConnected(false);\r\n        setTimeout(connectWebSocket, 5000); // Bağlantı kesildiğinde yeniden dene\r\n      };\r\n\r\n      socketRef.current.onmessage = (event) => {\r\n        if (!canvasRef.current) return;\r\n\r\n        const arrayBuffer = event.data;\r\n        const blob = new Blob([arrayBuffer], { type: \"image/jpeg\" });\r\n        const imageUrl = URL.createObjectURL(blob);\r\n\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n          if (!canvasRef.current) return;\r\n          console.log(\"Yeni bir frame yüklendi.\");\r\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n          URL.revokeObjectURL(imageUrl); // Bellek temizleme\r\n        };\r\n        img.src = imageUrl;\r\n      };\r\n    };\r\n\r\n    setTimeout(connectWebSocket, 1000); // WebSocket bağlantısını 1 saniye sonra başlat\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.close();\r\n        console.log(\"WebSocket bağlantısı kapatıldı.\");\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"video-container\">\r\n      <h1>Video Akışı</h1>\r\n      <div>{isConnected ? \"Bağlantı başarılı!\" : \"Bağlantı kuruluyor...\"}</div>\r\n      <canvas ref={canvasRef} width=\"640\" height=\"480\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Iletisim;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}