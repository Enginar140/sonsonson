{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Engin\\\\Desktop\\\\telemetri\\\\adini-arayuz-godum\\\\src\\\\pages\\\\Telemetry.js\",\n  _s = $RefreshSig$();\nimport { useWebSocket } from './websocket-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Telemetry = () => {\n  _s();\n  const [telemetryData, setTelemetryData] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const canvasRef = useRef(null);\n  const {\n    addListener\n  } = useWebSocket();\n\n  // WebSocket dinleyicisi\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      if (message.type === 'status') {\n        setIsConnected(message.connected);\n      } else if (message.type === 'data' && canvasRef.current) {\n        const arrayBuffer = message.data;\n        const blob = new Blob([arrayBuffer], {\n          type: \"image/jpeg\"\n        });\n        const imageUrl = URL.createObjectURL(blob);\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.onload = () => {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          URL.revokeObjectURL(imageUrl);\n        };\n        img.src = imageUrl;\n      }\n    };\n    const removeListener = addListener(handleWebSocketMessage);\n    return removeListener;\n  }, [addListener]);\n\n  // ... (telemetry veri çekme kodu aynı kalacak)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telemetry-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"telemetry-container green-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CANLI G\\xD6R\\xDCNT\\xDC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-stream-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: isConnected ? 'Bağlantı başarılı' : 'Bağlantı kesildi'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: \"640\",\n          height: \"480\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Telemetry, \"JeQhq/Fbp8OSJHVQfw8wULfTAUQ=\", false, function () {\n  return [useWebSocket];\n});\n_c = Telemetry;\nvar _c;\n$RefreshReg$(_c, \"Telemetry\");","map":{"version":3,"names":["useWebSocket","jsxDEV","_jsxDEV","Telemetry","_s","telemetryData","setTelemetryData","useState","isConnected","setIsConnected","canvasRef","useRef","addListener","useEffect","handleWebSocketMessage","message","type","connected","current","arrayBuffer","data","blob","Blob","imageUrl","URL","createObjectURL","canvas","ctx","getContext","img","Image","onload","clearRect","width","height","drawImage","revokeObjectURL","src","removeListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/Engin/Desktop/telemetri/adini-arayuz-godum/src/pages/Telemetry.js"],"sourcesContent":["import { useWebSocket } from './websocket-context';\r\n\r\nconst Telemetry = () => {\r\n  const [telemetryData, setTelemetryData] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const canvasRef = useRef(null);\r\n  const { addListener } = useWebSocket();\r\n\r\n  // WebSocket dinleyicisi\r\n  useEffect(() => {\r\n    const handleWebSocketMessage = (message) => {\r\n      if (message.type === 'status') {\r\n        setIsConnected(message.connected);\r\n      } else if (message.type === 'data' && canvasRef.current) {\r\n        const arrayBuffer = message.data;\r\n        const blob = new Blob([arrayBuffer], { type: \"image/jpeg\" });\r\n        const imageUrl = URL.createObjectURL(blob);\r\n        \r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n          URL.revokeObjectURL(imageUrl);\r\n        };\r\n        img.src = imageUrl;\r\n      }\r\n    };\r\n\r\n    const removeListener = addListener(handleWebSocketMessage);\r\n    return removeListener;\r\n  }, [addListener]);\r\n\r\n  // ... (telemetry veri çekme kodu aynı kalacak)\r\n\r\n  return (\r\n    <div className=\"telemetry-wrapper\">\r\n      <div className=\"telemetry-container green-container\">\r\n        <h3>CANLI GÖRÜNTÜ</h3>\r\n        <div className=\"video-stream-container\">\r\n          <div className=\"connection-status\">\r\n            {isConnected ? 'Bağlantı başarılı' : 'Bağlantı kesildi'}\r\n          </div>\r\n          <canvas ref={canvasRef} width=\"640\" height=\"480\" />\r\n        </div>\r\n      </div>\r\n      {/* ... diğer kodlar */}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}