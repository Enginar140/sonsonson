{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Engin\\\\Desktop\\\\telemetri\\\\adini-arayuz-godum\\\\src\\\\pages\\\\Telemetry.js\",\n  _s = $RefreshSig$();\n// src/pages/Telemetry.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useWebSocket } from \"../context/WebSocketContext\";\nimport \"../styles/global.css\";\nimport \"../styles/components/telemetry.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Telemetry = () => {\n  _s();\n  const [telemetryData, setTelemetryData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const canvasRef = useRef(null);\n  const {\n    addListener\n  } = useWebSocket();\n\n  // WebSocket dinleyicisi\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      if (message.type === 'status') {\n        setIsConnected(message.connected);\n      } else if (message.type === 'data' && canvasRef.current) {\n        const blob = new Blob([message.data], {\n          type: \"image/jpeg\"\n        });\n        const imageUrl = URL.createObjectURL(blob);\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.onload = () => {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          URL.revokeObjectURL(imageUrl);\n        };\n        img.src = imageUrl;\n      }\n    };\n    const removeListener = addListener(handleWebSocketMessage);\n    return removeListener;\n  }, [addListener]);\n\n  // Telemetry verilerini çekme\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchTelemetry = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/telemetry\", {\n          signal\n        });\n        setTelemetryData(prevData => JSON.stringify(prevData) !== JSON.stringify(response.data) ? response.data : prevData);\n        setLoading(false);\n        setError(null);\n      } catch (error) {\n        if (!axios.isCancel(error)) {\n          console.error(\"Telemetri hatası:\", error);\n          setError(\"Telemetri verisi alınamadı\");\n          setLoading(false);\n        }\n      }\n    };\n    fetchTelemetry();\n    const interval = setInterval(fetchTelemetry, 1000);\n    return () => {\n      clearInterval(interval);\n      controller.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telemetry-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"telemetry-container green-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CANLI G\\xD6R\\xDCNT\\xDC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-stream-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `connection-status ${isConnected ? 'connected' : 'disconnected'}`,\n          children: isConnected ? 'Bağlantı başarılı' : 'Bağlantı kesildi'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: \"640\",\n          height: \"480\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"telemetry-container red-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: \"Telemetri verisi y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"telemetry-content\",\n        children: telemetryData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tak\\u0131m Numaras\\u0131:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 20\n            }, this), \" \", telemetryData.takim_numarasi]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Telemetry, \"uSpg3PksehrHVjKSkI1H5VEImcM=\", false, function () {\n  return [useWebSocket];\n});\n_c = Telemetry;\nexport default Telemetry;\nvar _c;\n$RefreshReg$(_c, \"Telemetry\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","useWebSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","Telemetry","_s","telemetryData","setTelemetryData","loading","setLoading","error","setError","isConnected","setIsConnected","canvasRef","addListener","handleWebSocketMessage","message","type","connected","current","blob","Blob","data","imageUrl","URL","createObjectURL","canvas","ctx","getContext","img","Image","onload","clearRect","width","height","drawImage","revokeObjectURL","src","removeListener","controller","AbortController","signal","fetchTelemetry","response","get","prevData","JSON","stringify","isCancel","console","interval","setInterval","clearInterval","abort","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","takim_numarasi","_c","$RefreshReg$"],"sources":["C:/Users/Engin/Desktop/telemetri/adini-arayuz-godum/src/pages/Telemetry.js"],"sourcesContent":["// src/pages/Telemetry.js\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useWebSocket } from \"../context/WebSocketContext\";\r\nimport \"../styles/global.css\";\r\nimport \"../styles/components/telemetry.css\";\r\n\r\nconst Telemetry = () => {\r\n  const [telemetryData, setTelemetryData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const canvasRef = useRef(null);\r\n  const { addListener } = useWebSocket();\r\n\r\n  // WebSocket dinleyicisi\r\n  useEffect(() => {\r\n    const handleWebSocketMessage = (message) => {\r\n      if (message.type === 'status') {\r\n        setIsConnected(message.connected);\r\n      } else if (message.type === 'data' && canvasRef.current) {\r\n        const blob = new Blob([message.data], { type: \"image/jpeg\" });\r\n        const imageUrl = URL.createObjectURL(blob);\r\n        \r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n          URL.revokeObjectURL(imageUrl);\r\n        };\r\n        img.src = imageUrl;\r\n      }\r\n    };\r\n\r\n    const removeListener = addListener(handleWebSocketMessage);\r\n    return removeListener;\r\n  }, [addListener]);\r\n\r\n  // Telemetry verilerini çekme\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n\r\n    const fetchTelemetry = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:5000/telemetry\", { signal });\r\n        setTelemetryData(prevData => \r\n          JSON.stringify(prevData) !== JSON.stringify(response.data) \r\n            ? response.data \r\n            : prevData\r\n        );\r\n        setLoading(false);\r\n        setError(null);\r\n      } catch (error) {\r\n        if (!axios.isCancel(error)) {\r\n          console.error(\"Telemetri hatası:\", error);\r\n          setError(\"Telemetri verisi alınamadı\");\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchTelemetry();\r\n    const interval = setInterval(fetchTelemetry, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      controller.abort();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"telemetry-wrapper\">\r\n      <div className=\"telemetry-container green-container\">\r\n        <h3>CANLI GÖRÜNTÜ</h3>\r\n        <div className=\"video-stream-container\">\r\n          <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\r\n            {isConnected ? 'Bağlantı başarılı' : 'Bağlantı kesildi'}\r\n          </div>\r\n          <canvas ref={canvasRef} width=\"640\" height=\"480\" />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"telemetry-container red-container\">\r\n        {loading ? (\r\n          <div className=\"loading-message\">Telemetri verisi yükleniyor...</div>\r\n        ) : error ? (\r\n          <div className=\"error-message\">{error}</div>\r\n        ) : (\r\n          <div className=\"telemetry-content\">\r\n            {telemetryData && (\r\n              <>\r\n                {/* Telemetri verilerini göster */}\r\n                <p><strong>Takım Numarası:</strong> {telemetryData.takim_numarasi}</p>\r\n                {/* Diğer telemetri verileri... */}\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Telemetry;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,OAAO,sBAAsB;AAC7B,OAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMiB,SAAS,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM;IAAEmB;EAAY,CAAC,GAAGhB,YAAY,CAAC,CAAC;;EAEtC;EACAJ,SAAS,CAAC,MAAM;IACd,MAAMqB,sBAAsB,GAAIC,OAAO,IAAK;MAC1C,IAAIA,OAAO,CAACC,IAAI,KAAK,QAAQ,EAAE;QAC7BL,cAAc,CAACI,OAAO,CAACE,SAAS,CAAC;MACnC,CAAC,MAAM,IAAIF,OAAO,CAACC,IAAI,KAAK,MAAM,IAAIJ,SAAS,CAACM,OAAO,EAAE;QACvD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,OAAO,CAACM,IAAI,CAAC,EAAE;UAAEL,IAAI,EAAE;QAAa,CAAC,CAAC;QAC7D,MAAMM,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QAE1C,MAAMM,MAAM,GAAGb,SAAS,CAACM,OAAO;QAChC,MAAMQ,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;QACnC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;QAEvBD,GAAG,CAACE,MAAM,GAAG,MAAM;UACjBJ,GAAG,CAACK,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEN,MAAM,CAACO,KAAK,EAAEP,MAAM,CAACQ,MAAM,CAAC;UAChDP,GAAG,CAACQ,SAAS,CAACN,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEH,MAAM,CAACO,KAAK,EAAEP,MAAM,CAACQ,MAAM,CAAC;UACrDV,GAAG,CAACY,eAAe,CAACb,QAAQ,CAAC;QAC/B,CAAC;QACDM,GAAG,CAACQ,GAAG,GAAGd,QAAQ;MACpB;IACF,CAAC;IAED,MAAMe,cAAc,GAAGxB,WAAW,CAACC,sBAAsB,CAAC;IAC1D,OAAOuB,cAAc;EACvB,CAAC,EAAE,CAACxB,WAAW,CAAC,CAAC;;EAEjB;EACApB,SAAS,CAAC,MAAM;IACd,MAAM6C,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAGF,UAAU,CAACE,MAAM;IAEhC,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM9C,KAAK,CAAC+C,GAAG,CAAC,iCAAiC,EAAE;UAAEH;QAAO,CAAC,CAAC;QAC/EnC,gBAAgB,CAACuC,QAAQ,IACvBC,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAC,KAAKC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAACrB,IAAI,CAAC,GACtDqB,QAAQ,CAACrB,IAAI,GACbuB,QACN,CAAC;QACDrC,UAAU,CAAC,KAAK,CAAC;QACjBE,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;QACd,IAAI,CAACZ,KAAK,CAACmD,QAAQ,CAACvC,KAAK,CAAC,EAAE;UAC1BwC,OAAO,CAACxC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;UACzCC,QAAQ,CAAC,4BAA4B,CAAC;UACtCF,UAAU,CAAC,KAAK,CAAC;QACnB;MACF;IACF,CAAC;IAEDkC,cAAc,CAAC,CAAC;IAChB,MAAMQ,QAAQ,GAAGC,WAAW,CAACT,cAAc,EAAE,IAAI,CAAC;IAElD,OAAO,MAAM;MACXU,aAAa,CAACF,QAAQ,CAAC;MACvBX,UAAU,CAACc,KAAK,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErD,OAAA;IAAKsD,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCvD,OAAA;MAAKsD,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBAClDvD,OAAA;QAAAuD,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB3D,OAAA;QAAKsD,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCvD,OAAA;UAAKsD,SAAS,EAAE,qBAAqB3C,WAAW,GAAG,WAAW,GAAG,cAAc,EAAG;UAAA4C,QAAA,EAC/E5C,WAAW,GAAG,mBAAmB,GAAG;QAAkB;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACN3D,OAAA;UAAQ4D,GAAG,EAAE/C,SAAU;UAACoB,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC;QAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3D,OAAA;MAAKsD,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAC/ChD,OAAO,gBACNP,OAAA;QAAKsD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GACnElD,KAAK,gBACPT,OAAA;QAAKsD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAE9C;MAAK;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,gBAE5C3D,OAAA;QAAKsD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BlD,aAAa,iBACZL,OAAA,CAAAE,SAAA;UAAAqD,QAAA,eAEEvD,OAAA;YAAAuD,QAAA,gBAAGvD,OAAA;cAAAuD,QAAA,EAAQ;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACtD,aAAa,CAACwD,cAAc;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,gBAEtE;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvD,EAAA,CAlGID,SAAS;EAAA,QAMWL,YAAY;AAAA;AAAAgE,EAAA,GANhC3D,SAAS;AAoGf,eAAeA,SAAS;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}